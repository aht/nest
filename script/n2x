#!/usr/bin/env python

"""Read NEST text from stdin or from file named by the arguments.
Write XML to stdout.

Usage:
	n2x [-ldh] [file1] [file2] ...

Options:
	-l	Perform lexical analysis only
	-d	Print parser's debug information to stderr
	-x	Include !DOCTYPE XHTML 1.0 Strict prolog
"""

import getopt, os, sys

from nest.lexer import nest_lexer, LexError
from nest.parser import xml, xhtml, YaccError

lexonly = False
debug = False
xhtml_prolog = False

if __name__ == '__main__':
	opts, args = getopt.getopt(sys.argv[1:], 'ldxh', 'help')
	for o, v in opts:	
		if o == '-h' or o == '--help':
			print __doc__
			sys.exit()
		if o == '-l':
			lexonly = True
		elif o == '-d':
			debug = True
		elif o == '-x':
			xhtml_prolog = True
	if not args:
		args = [sys.stdin]

	try:
		if lexonly:
			for file in args:
				if file is not sys.stdin:
					file = open(file)
				nest_lexer.input(file.read())
			for t in nest_lexer:
				print t, nest_lexer.lex.lexstate
		else:
			if xhtml_prolog:
				parse = xhtml
			else:
				parse = xml
			for file in args:
				if file is not sys.stdin:
					file = open(file)
				print parse(file.read(), debug=debug)
	except LexError as e:
		print "%s:%s: lexical error, %s" % (file.name, e.lineno, e.msg)
		sys.exit(1)
	except YaccError as e:
		print "%s:%s: syntax error, %s" % (file.name, e.lineno, e.msg)
		sys.exit(1)
