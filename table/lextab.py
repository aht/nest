# lextab.py. This file automatically created by PLY (version 3.3). Don't edit!
_tabversion   = '3.3'
_lextokens    = {'COMMENT': 1, 'END': 1, 'ATTR_EQ': 1, 'START2': 1, 'START3': 1, 'START1': 1, 'VALUE': 1, 'START5': 1, 'ESCAPED': 1, 'CDATA': 1, 'TAG': 1, 'WS': 1, 'START4': 1, 'TAG_ATTR': 1}
_lexreflags   = 0
_lexliterals  = ''
_lexstateinfo = {'body': 'exclusive', 'indent': 'exclusive', 'attr': 'exclusive', 'INITIAL': 'inclusive', 'oneword': 'exclusive', 'oneline': 'exclusive', 'bracket': 'exclusive'}
_lexstatere   = {'body': [('(?P<t_ANY_ESCAPED>\\\\[\\\\<> ])|(?P<t_ANY_COMMENT>\\\\(--+|==+))|(?P<t_ANY_TAG_ATTR>\\\\[^ \\t\\r\\n\\[\\]<>:]+[ \\t\\r\\n]*\\[)|(?P<t_ANY_TAG>\\\\[^ \\t\\r\\n\\[\\]<>:]+)|(?P<t_body_START1>:[\\r\\n]+[\\t]+)|(?P<t_body_START2>:[ \\t]*)|(?P<t_body_START3>[ \\t\\r\\n]*<)|(?P<t_body_START4>[ \\t]+)|(?P<t_body_START5>[\\r\\n]+[ \\t]*)', [None, ('t_ANY_ESCAPED', 'ESCAPED'), ('t_ANY_COMMENT', 'COMMENT'), None, ('t_ANY_TAG_ATTR', 'TAG_ATTR'), ('t_ANY_TAG', 'TAG'), ('t_body_START1', 'START1'), ('t_body_START2', 'START2'), ('t_body_START3', 'START3'), ('t_body_START4', 'START4'), ('t_body_START5', 'START5')])], 'indent': [('(?P<t_ANY_ESCAPED>\\\\[\\\\<> ])|(?P<t_ANY_COMMENT>\\\\(--+|==+))|(?P<t_ANY_TAG_ATTR>\\\\[^ \\t\\r\\n\\[\\]<>:]+[ \\t\\r\\n]*\\[)|(?P<t_ANY_TAG>\\\\[^ \\t\\r\\n\\[\\]<>:]+)|(?P<t_indent_CDATA>[^\\\\\\r\\n]+)|(?P<t_indent_END>[\\r\\n]+[\\t]*)', [None, ('t_ANY_ESCAPED', 'ESCAPED'), ('t_ANY_COMMENT', 'COMMENT'), None, ('t_ANY_TAG_ATTR', 'TAG_ATTR'), ('t_ANY_TAG', 'TAG'), ('t_indent_CDATA', 'CDATA'), ('t_indent_END', 'END')])], 'attr': [('(?P<t_ANY_ESCAPED>\\\\[\\\\<> ])|(?P<t_ANY_COMMENT>\\\\(--+|==+))|(?P<t_ANY_TAG_ATTR>\\\\[^ \\t\\r\\n\\[\\]<>:]+[ \\t\\r\\n]*\\[)|(?P<t_ANY_TAG>\\\\[^ \\t\\r\\n\\[\\]<>:]+)|(?P<t_attr_ATTR_EQ>[^ \\=\\]]+[ \\t\\n\\r]*=)|(?P<t_attr_VALUE>(\\\'.*?\\\')|(".*?")|[^= \\\\\\t\\r\\n\\]]+)|(?P<t_attr_END_ATTR>\\])|(?P<t_attr_ignore_WS>[ \\t\\r\\n]+)', [None, ('t_ANY_ESCAPED', 'ESCAPED'), ('t_ANY_COMMENT', 'COMMENT'), None, ('t_ANY_TAG_ATTR', 'TAG_ATTR'), ('t_ANY_TAG', 'TAG'), ('t_attr_ATTR_EQ', 'ATTR_EQ'), ('t_attr_VALUE', 'VALUE'), None, None, ('t_attr_END_ATTR', 'END_ATTR'), (None, None)])], 'INITIAL': [('(?P<t_ANY_ESCAPED>\\\\[\\\\<> ])|(?P<t_ANY_COMMENT>\\\\(--+|==+))|(?P<t_ANY_TAG_ATTR>\\\\[^ \\t\\r\\n\\[\\]<>:]+[ \\t\\r\\n]*\\[)|(?P<t_ANY_TAG>\\\\[^ \\t\\r\\n\\[\\]<>:]+)|(?P<t_INITIAL_CDATA>[^\\\\]+)', [None, ('t_ANY_ESCAPED', 'ESCAPED'), ('t_ANY_COMMENT', 'COMMENT'), None, ('t_ANY_TAG_ATTR', 'TAG_ATTR'), ('t_ANY_TAG', 'TAG'), (None, 'CDATA')])], 'oneword': [('(?P<t_ANY_ESCAPED>\\\\[\\\\<> ])|(?P<t_ANY_COMMENT>\\\\(--+|==+))|(?P<t_ANY_TAG_ATTR>\\\\[^ \\t\\r\\n\\[\\]<>:]+[ \\t\\r\\n]*\\[)|(?P<t_ANY_TAG>\\\\[^ \\t\\r\\n\\[\\]<>:]+)|(?P<t_oneword_CDATA>[^\\\\ \\t\\r\\n]+)|(?P<t_oneword_END>[ \\t\\r\\n]+)', [None, ('t_ANY_ESCAPED', 'ESCAPED'), ('t_ANY_COMMENT', 'COMMENT'), None, ('t_ANY_TAG_ATTR', 'TAG_ATTR'), ('t_ANY_TAG', 'TAG'), ('t_oneword_CDATA', 'CDATA'), ('t_oneword_END', 'END')])], 'oneline': [('(?P<t_ANY_ESCAPED>\\\\[\\\\<> ])|(?P<t_ANY_COMMENT>\\\\(--+|==+))|(?P<t_ANY_TAG_ATTR>\\\\[^ \\t\\r\\n\\[\\]<>:]+[ \\t\\r\\n]*\\[)|(?P<t_ANY_TAG>\\\\[^ \\t\\r\\n\\[\\]<>:]+)|(?P<t_oneline_CDATA>[^\\\\\\r\\n]+)|(?P<t_oneline_END>[\\r\\n]+[\\t]*)', [None, ('t_ANY_ESCAPED', 'ESCAPED'), ('t_ANY_COMMENT', 'COMMENT'), None, ('t_ANY_TAG_ATTR', 'TAG_ATTR'), ('t_ANY_TAG', 'TAG'), ('t_oneline_CDATA', 'CDATA'), ('t_oneline_END', 'END')])], 'bracket': [('(?P<t_ANY_ESCAPED>\\\\[\\\\<> ])|(?P<t_ANY_COMMENT>\\\\(--+|==+))|(?P<t_ANY_TAG_ATTR>\\\\[^ \\t\\r\\n\\[\\]<>:]+[ \\t\\r\\n]*\\[)|(?P<t_ANY_TAG>\\\\[^ \\t\\r\\n\\[\\]<>:]+)|(?P<t_bracket_CDATA>[^\\\\>]+)|(?P<t_bracket_END>>)', [None, ('t_ANY_ESCAPED', 'ESCAPED'), ('t_ANY_COMMENT', 'COMMENT'), None, ('t_ANY_TAG_ATTR', 'TAG_ATTR'), ('t_ANY_TAG', 'TAG'), ('t_bracket_CDATA', 'CDATA'), ('t_bracket_END', 'END')])]}
_lexstateignore = {'INITIAL': ''}
_lexstateerrorf = {'body': 't_ANY_error', 'indent': 't_ANY_error', 'attr': 't_ANY_error', 'INITIAL': 't_ANY_error', 'oneword': 't_ANY_error', 'oneline': 't_ANY_error', 'bracket': 't_ANY_error'}
